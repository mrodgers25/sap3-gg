{"ast":null,"code":"function isWindow(obj) {\n  return obj != null && obj === obj.window;\n}\n\nfunction find(selector, context) {\n  if (context === void 0) {\n    context = null;\n  }\n\n  if (selector instanceof HTMLElement || selector instanceof Node || isWindow(selector)) {\n    return [selector];\n  } else if (selector instanceof NodeList) {\n    return [].slice.call(selector);\n  } else if (typeof selector === 'string') {\n    var startElement = context ? find(context)[0] : document;\n    return [].slice.call(startElement.querySelectorAll(selector));\n  }\n\n  return [];\n}\n\nfunction addClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return addClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.add(item);\n      });\n    });\n    return els;\n  }\n}\n\nfunction on(selector, event, cb, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return on(item, event, cb, capture);\n    });\n    return;\n  }\n\n  var data = {\n    cb: cb,\n    capture: capture\n  };\n\n  if (!window._domassistevents) {\n    window._domassistevents = {};\n  }\n\n  window._domassistevents[\"_\" + event] = data;\n  var el = find(selector);\n\n  if (el.length) {\n    el.forEach(function (item) {\n      item.addEventListener(event, cb, capture);\n    });\n  }\n}\n\nfunction matches(el, selector) {\n  var proto = Element.prototype;\n  var match = false;\n  var prefixes = ['matches', 'matchesSelector', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector', 'oMatchesSelector'];\n  prefixes.forEach(function (prefix) {\n    if (proto.hasOwnProperty(prefix)) {\n      match = proto[prefix];\n    }\n  });\n\n  if (match) {\n    return el ? match.call(el, selector) : null;\n  }\n}\n\nfunction closest(el, selector) {\n  do {\n    if (matches(el, selector)) {\n      return el;\n    }\n\n    el = el.parentElement || el.parentNode;\n  } while (el !== null && el.nodeType === 1);\n\n  return null;\n}\n\nfunction delegate(el, event, selector, cb, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  on(el, event, function (e) {\n    if (e.target && closest(e.target, selector)) {\n      return cb(e);\n    }\n  }, capture);\n}\n\nfunction findOne(selector, el) {\n  var found = find(selector, el);\n\n  if (found.length) {\n    return found[0];\n  }\n\n  return null;\n} // Check for the usage of native support for CustomEvents which is lacking\n// completely on IE.\n//\n\n\nfunction canIuseNativeCustom() {\n  try {\n    var p = new CustomEvent('t', {\n      detail: {\n        a: 'b'\n      }\n    });\n    return p.type === 't' && p.detail.a === 'b';\n  } catch (e) {\n    return false;\n  }\n} // Lousy polyfill for the Custom Event constructor for IE.\n\n\nvar IECustomEvent = function CustomEvent(type, params) {\n  var e = document.createEvent('CustomEvent');\n\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, undefined);\n  }\n\n  return e;\n};\n\nvar DomassistCustomEvent = false;\n\nfunction fire(selector, type, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return fire(item, type, params);\n    });\n  }\n\n  if (!DomassistCustomEvent) {\n    DomassistCustomEvent = canIuseNativeCustom() ? CustomEvent : IECustomEvent;\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    if (params.bubbles !== false) {\n      params.bubbles = true;\n    }\n\n    els.forEach(function (el) {\n      var event = new DomassistCustomEvent(type, params);\n      el.dispatchEvent(event);\n    });\n    return els;\n  }\n}\n\nfunction hasClass(selector, cls) {\n  var el = findOne(selector);\n\n  if (!el) {\n    return false;\n  }\n\n  return el.classList.contains(cls);\n}\n\nfunction hide(selector) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return hide(item);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      var currentDisplay = window.getComputedStyle(el).getPropertyValue('display');\n\n      if (currentDisplay !== 'none') {\n        el.dataset._currentDisplay = currentDisplay;\n        el.style.display = 'none';\n      }\n    });\n  }\n}\n\nfunction hover(el, enter, exit) {\n  on(el, 'mouseenter', enter);\n  on(el, 'mouseleave', exit);\n}\n\nfunction off(selector, event) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return off(item, event);\n    });\n  }\n\n  if (!window._domassistevents) {\n    window._domassistevents = {};\n  }\n\n  var data = window._domassistevents[\"_\" + event];\n\n  if (!data) {\n    return;\n  }\n\n  var el = find(selector);\n\n  if (el.length) {\n    el.forEach(function (item) {\n      item.removeEventListener(event, data.cb, data.capture);\n    });\n  }\n}\n\nfunction once(el, event, run, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  on(el, event, function (e) {\n    off(el, event);\n    run(e);\n  }, capture);\n}\n\nvar transform = null;\n\nfunction prefixedTransform() {\n  if (transform) {\n    return transform;\n  }\n\n  var testEl = document.createElement('div');\n\n  if (testEl.style.transform === null) {\n    var vendors = ['Webkit', 'webkit', 'Moz', 'ms'];\n    var property = null;\n\n    for (var i = 0, len = vendors.length; i < len && !property; i++) {\n      var tProperty = vendors[i] + \"Transform\";\n\n      if (typeof testEl.style[tProperty] !== 'undefined') {\n        property = tProperty;\n      }\n    }\n\n    transform = property;\n  } else {\n    transform = 'transform';\n  }\n\n  return transform;\n}\n\nfunction removeClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return removeClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.remove(item);\n      });\n    });\n    return els;\n  }\n}\n\nvar SCROLLABLE_CONTAINER;\n\nfunction getScrollableContainer() {\n  if (SCROLLABLE_CONTAINER) {\n    return SCROLLABLE_CONTAINER;\n  }\n\n  var documentElement = window.document.documentElement;\n  var scrollableContainer;\n  documentElement.scrollTop = 1;\n\n  if (documentElement.scrollTop === 1) {\n    documentElement.scrollTop = 0;\n    scrollableContainer = documentElement;\n  } else {\n    scrollableContainer = document.body;\n  }\n\n  SCROLLABLE_CONTAINER = scrollableContainer;\n  return scrollableContainer;\n}\n\nfunction show(selector) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return show(item);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      el.style.display = el.dataset._currentDisplay || 'block';\n    });\n  }\n}\n\nfunction toggleClass(selector, cls) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return toggleClass(item, cls);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    var clsArray = [].concat(cls);\n    els.forEach(function (el) {\n      clsArray.forEach(function (item) {\n        el.classList.toggle(item);\n      });\n    });\n    return els;\n  }\n}\n\nvar setupReady = function setupReady(callbacks) {\n  return function (callback) {\n    callbacks.push(callback);\n\n    function execute() {\n      while (callbacks.length) {\n        var fn = callbacks.shift();\n\n        if (typeof fn === 'function') {\n          fn();\n        }\n      }\n    }\n\n    function loaded() {\n      document.removeEventListener('DOMContentLoaded', loaded);\n      execute();\n    }\n\n    setTimeout(function () {\n      if (document.readyState !== 'loading') {\n        return execute();\n      }\n    }, 0);\n    document.addEventListener('DOMContentLoaded', loaded);\n  };\n};\n\nvar ready = setupReady([]);\n\nfunction styles(selector, css) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return styles(item, css);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      Object.keys(css).forEach(function (key) {\n        el.style[key] = css[key];\n      });\n    });\n  }\n}\n\nfunction addAttrs(selector, attrs) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return addAttrs(item, attrs);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (item) {\n      Object.keys(attrs).forEach(function (attr) {\n        if (attr in item) {\n          item[attr] = attrs[attr];\n        } else {\n          item.dataset[attr] = attrs[attr];\n        }\n      });\n    });\n  }\n\n  return els;\n}\n\nfunction html(selector, value) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return html(item, value);\n    });\n  }\n\n  var el = find(selector);\n\n  if (el.length) {\n    var length = el.length;\n\n    for (var i = 0; i < length; i += 1) {\n      el[i].innerHTML = value;\n    }\n  }\n}\n/* global DocumentTouch */\n\n\nfunction isTouch() {\n  return 'ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch;\n}\n\nfunction bindEvents(el, events) {\n  Object.keys(events).forEach(function (event) {\n    on(el, event, events[event]);\n  });\n}\n\nfunction modify(selector, params) {\n  if (Array.isArray(selector)) {\n    selector.forEach(function (item) {\n      return modify(item, params);\n    });\n  }\n\n  var modules = {\n    addClass: addClass,\n    removeClass: removeClass,\n    html: html,\n    events: on,\n    styles: styles\n  };\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      Object.keys(params).forEach(function (param, index) {\n        if (param in modules) {\n          if (param === 'events') {\n            bindEvents(el, params[param]);\n          }\n\n          modules[param](el, params[param]);\n        }\n      });\n    });\n  }\n}\n\nfunction append(selector, value) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return append(item, value);\n    });\n  }\n\n  var els = find(selector);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      if (typeof value === 'string') {\n        el.insertAdjacentHTML('beforeend', value);\n      } else {\n        el.appendChild(value);\n      }\n    });\n  }\n}\n\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  if (value instanceof Node) {\n    return [value];\n  }\n\n  return [].slice.call(value);\n}\n\nfunction remove(selector, context) {\n  if (Array.isArray(selector)) {\n    return selector.forEach(function (item) {\n      return remove(item, context);\n    });\n  }\n\n  var els = find(selector, context);\n\n  if (els.length) {\n    els.forEach(function (el) {\n      if (el.prototype && el.prototype.remove) {\n        el.remove();\n      } else if (el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    });\n  }\n}\n\nvar domassist_default = {\n  addClass: addClass,\n  delegate: delegate,\n  find: find,\n  findOne: findOne,\n  fire: fire,\n  hasClass: hasClass,\n  hide: hide,\n  hover: hover,\n  isWindow: isWindow,\n  off: off,\n  on: on,\n  once: once,\n  prefixedTransform: prefixedTransform,\n  removeClass: removeClass,\n  scrollableContainer: getScrollableContainer,\n  show: show,\n  matches: matches,\n  toggleClass: toggleClass,\n  closest: closest,\n  ready: ready,\n  styles: styles,\n  addAttrs: addAttrs,\n  html: html,\n  isTouch: isTouch,\n  modify: modify,\n  append: append,\n  toArray: toArray,\n  remove: remove\n};\nexport default domassist_default;\nexport { addAttrs, addClass, append, closest, delegate, find, findOne, fire, hasClass, hide, hover, html, isTouch, isWindow, matches, modify, off, on, once, prefixedTransform, ready, remove, removeClass, getScrollableContainer as scrollableContainer, show, styles, toArray, toggleClass };","map":null,"metadata":{},"sourceType":"module"}